Every operation as an amortized running time of O(1) and there is no way to have several resize in quick succession, so the total is O(n).

It would be another story had we naively implemented the op resizing when the length of the list is twice as small as the capacity. We could then have an array of size 128 (for example), appending would resize, then poping would resize, then appending would resize... Yielding a running time of O(n**2).